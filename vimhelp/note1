vim  实用技巧笔记
一、模式 
    1、普通模式
        点命令
        <c-a> <c-x> 光标后数字加减命令
        操作符和动作命令
            操作符 operator
            动作命令 motion 移动光标
    2、插入模式
         a、删除 <c-h> <c-w> <c-u> 
         b、插入普通模式 <c-o>
         c 、插入寄存器中的文本 <c-r>       
    3、可视模式
          激活可视模式 v V <c-v> gv(重选上次的选区)
          切换活动端 o
          列块模式下的 I 和 A 命令
    4、命令模式 ex-cmd-index
        [range]命令范围 
            用行号做范围 如 1, 4p
            标记做范围  % 整个选区，. 当前行， ‘m 标记行， $ 最后一行 
            高亮选区做范围
            查找模式做范围 /模式/，/模式/  
        常用的编辑命令 t, m, n, 
            [range]t [address]  复制
            [range]m [address]  移动 
            [range]n [普通模式命令]
        重复上次的ex命令 @:
        自动补全         <c-d>
        把当前单词插入到命令行 <c-r><c-w>
        把当前字串插入到命令行 <c-r><c-a>
        命令行窗口             q:
        运行shell命令          
            :shell
            :!cmd
            :r !cmd
            :[range]w !cmd
            :[range] !{filter} 

二、文件 
        1、缓冲区列表
            列出缓冲区  :ls
            删除缓冲区  :bd n
            转到缓冲区  :b  n
            上一缓冲区  :bp
            下一缓冲区  :bn
            在所有缓冲区执行命令 bufdo 
        2、参数列表
            列出参数列表 :args
            填充参数列表 :args {arglist}
            增加参数列表 :argadd
            在参数列表上执行ex命令 :argdo
        3、窗口操作
            分割窗口 <c-w>s 水平分割窗口
                     <c-w>v 垂直分割窗口
                     :sp {filename} 水平分割窗口并载入文件
                     :vsp {filename} 垂直分割窗口并载入文件 
            窗口切换 
                    <c-w>w  揗环切换
                    <c-w>h  切换到左边 
                    <c-w>j  切换到下边
                    <c-w>k  切换到上边
                    <c-w>l  切换到右边
            关闭窗口
                    :clo  <c-w>c  <c-w>o

        4、标签页
            :tabe {filename} 在新标签页中打开filename
            <c-w>T 把当前窗口移到新标签页
            :tabc  关闭当前标签页
            :tabo  关闭所有其它标签页
            :tabn  {N} , {N}gt  
            :tabp 
三、寄存器与宏
            :reg
            寄存器分类 
                无名寄存器 “
                有名寄存器 (a-z)(A-Z) 
                复制专用寄存器 “0
                黑洞寄存器     ”—
                表达式寄存器   "=
                只读寄存器   “%  ”#  ". ": "/

            宏的读取与执行
                1录制宏 q
                2执行宏 @{reg}


            




                

            



            




            
          

          
